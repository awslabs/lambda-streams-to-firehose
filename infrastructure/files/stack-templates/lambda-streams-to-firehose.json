{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "lambda-streams-to-firehose stack, inside VPC",

    "Parameters": {
        "Environment": {
            "Type": "String",
            "Description": "The label given to the environment"
        },
        "Region": {
            "Type": "String",
            "Description": "The AWS region to deploy into"
        },
        "ReleaseType": {
            "Type": "String",
            "Description": "The type of release to pull (either snapshot or release)."
        },
        "AppVersion": {
            "Type": "String",
            "Description": "The version of the Lambda code to deploy"
        },
        "ProjectName": {
            "Type": "String",
            "Description": "The name of the main project"
        }
    },

    "Resources": {
        "StreamLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": {
                    "Fn::Join": [
                        "-", [
                            { "Ref": "ProjectName" }, 
                            { "Ref": "Environment" },
                            "StreamToFirehose"
                        ]
                    ]
                },
                "Code": {
                    "S3Bucket": "unbounce-maven-repo",
                    "S3Key": {
                        "Fn::Join": [
                            "/", [
                                { "Ref": "ReleaseType" },
                                "com/unbounce", 
                                { "Ref": "ProjectName" }, 
                                { "Ref": "AppVersion" },
                                ".zip"
                            ]
                        ]
                    }
                },
                "Description": "Lambda used to stream data from Kinesis Stream to Kinesis Firehose",
                "Handler": "index.handler",
                "Role": {
                    "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Action": ["sts:AssumeRole"],
                            "Effect": "Allow",
                            "Sid": "",
                            "Principal": {
                                "Service": ["lambda.amazonaws.com"]
                            }
                        }]
                    },
                    "Policies": [{
                        "PolicyName": {
                            "Fn::Join": [
                                "", [
                                    { "Ref": "ProjectName" }, 
                                    { "Ref": "Environment" },
                                    "Role"
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{
                                    "Sid": "AllowLoggingOperations",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": {
                                        "Fn::Join": [
                                            "", [
                                                "arn:aws:logs:*:*:/aws/lambda/", 
                                                { "Ref": "AWS::StackName" },
                                                "*"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Sid": "AllowLambdaInvokeFunction",
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        { "Ref": "StreamLambda" }
                                    ]
                                },
                                {
                                    "Sid": "AllowAccessToStream",
                                    "Effect": "Allow",
                                    "Action": [
                                        "kinesis:GetRecords",
                                        "kinesis:GetShardIterator",
                                        "kinesis:DescribeStream",
                                        "kinesis:ListStreams",
                                        "kinesis:ListTagsForStream"
                                    ],
                                    "Resource": { "Fn::Join": [
                                        ":", [
                                            "arn:aws:kinesis",
                                            "002682819933",
                                            { "Ref": "Region" },
                                            "stream",
                                            { "Fn::Join": ["-", ["event-receiver", { "Ref": "Environment" } ] ] }
                                        ]
                                    ]}
                                },
                                {
                                    "Sid": "AllowAccessToFirehose",
                                    "Effect": "Allow",
                                    "Action": [
                                        "firehose:DescribeDeliveryStream",
                                        "firehose:ListDeliveryStreams",
                                        "firehose:PutRecord",
                                        "firehose:PutRecordBatch"
                                    ],
                                    "Resource": [
                                        { "Ref": "LambdaFirehose" }
                                    ]
                                }
                            ]
                        }
                    }]
                },
                "Runtime": "nodejs",
                "Timeout": 300
            }
        },
        "FirehoseS3Role": {
			"AssumeRolePolicyDocument": {
				"Version": "2012-10-17",
				"Statement": [
					{
						"Sid": "",
						"Effect": "Allow",
						"Action": [
							"s3:AbortMultipartUpload",
							"s3:GetBucketLocation",
							"s3:GetObject",
							"s3:ListBucket",
							"s3:ListBucketMultipartUploads",
							"s3:PutObject"
						],
						"Resource": [
							"arn:aws:s3:::unbounce-streamed-stats",
							"arn:aws:s3:::unbounce-streamed-stats/*"
						]
					},
					{
						"Sid": "",
						"Effect": "Allow",
						"Action": [
							"logs:PutLogEvents"
						],
						"Resource": { "Fn::Join": [
                            "", [
                                "arn:aws:logs:*:*:/aws/kinesisfirehose/", 
                                { "Ref": "AWS::StackName" },
                                "*"
                            ]
                        ]}
					}
				]
				}
        },
        "LambdaFirehose": {
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": "StreamToLambdaToFirehoseToS3",
                "S3DestinationConfiguration": {
                    "BucketARN": "arn:aws:s3:::unbounce-streamed-stats",
                    "Prefix": {
                        "Fn::Join": [
                            "-", [
                                { "Ref": "ProjectName" }, 
                                { "Ref": "Environment" },
                                "/stats-events/"
                            ]
                        ]
                    },
                    "RoleARN": { "Ref": "FirehoseS3Role" }
                }
            }
        },
        "AlarmTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "DisplayName": {
                    "Fn::Join": [
                        "-", [
                                { "Ref": "ProjectName" }, 
                                { "Ref": "Environment" },
                                "AlarmTopic"    
                        ]
                    ]
                },
                "Subscription": [{
                    "Endpoint": "https://api.opsgenie.com/v1/json/cloudwatch?apiKey=8353c0a8-1f13-46e3-8046-6e52056438fd",
                    "Protocol": "https"
                }],
                "TopicName": {
                    "Fn::Join": [
                        "-", [
                                { "Ref": "ProjectName" }, 
                                { "Ref": "Environment" },
                                "AlarmTopic"
                        ]
                    ]
                }
            }
        },
        "LambdaErrorAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Alarm if errors from the Stream Lambda are >= 2 per minute.",
                "AlarmActions": [{
                    "Ref": "AlarmTopic"
                }],
                "OKActions": [{
                    "Ref": "AlarmTopic"
                }],
                "InsufficientDataActions": [{
                    "Ref": "AlarmTopic"
                }],
                "AlarmName": {
                    "Fn::Join": [
                        "-", [
                            { "Ref": "ProjectName" }, 
                            { "Ref": "Environment" },
                            "LambdaStreamsToFirehoseErrorAlarm"
                        ]
                    ]
                },
                "ComparisonOperator": "GreaterThanOrEqualThreshold",
                "Threshold": "2",
                "EvaluationPeriods": "1",
                "Statistic": "Sum",
                "Period": "60",
                "Dimensions": [{
                    "Name": "FunctionName",
                    "Value": {
                        "Ref": "StreamLambda"
                    }
                }],
                "MetricName": "Errors",
                "Namespace": "AWS/Lambda"
            }
        },
        "LambdaInvocationAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Alarm if invocations of the Stream Lambda are >= 10/min for 2 minutes.",
                "AlarmActions": [{
                    "Ref": "AlarmTopic"
                }],
                "OKActions": [{
                    "Ref": "AlarmTopic"
                }],
                "InsufficientDataActions": [{
                    "Ref": "AlarmTopic"
                }],
                "AlarmName": {
                    "Fn::Join": [
                        "-", [
                            { "Ref": "ProjectName" }, 
                            { "Ref": "Environment" },
                            "LambdaStreamsToFirehoseInvocationAlarm"
                        ]
                    ]
                },
                "ComparisonOperator": "GreaterThanOrEqualThreshold",
                "Threshold": "10",
                "EvaluationPeriods": "2",
                "Statistic": "Sum",
                "Period": "60",
                "Dimensions": [{
                    "Name": "FunctionName",
                    "Value": {
                        "Ref": "StreamLambda"
                    }
                }],
                "MetricName": "Invocations",
                "Namespace": "AWS/Lambda"
            }
        }
    },

    "Outputs": {
        "LambdaArn": {
            "Description": "ARN of the Lambda",
            "Value": {
                "Fn::GetAtt": ["StreamLambda", "Arn"]
            }
        },
        "FirehoseArn": {
            "Description": "ARN of the Firehose",
            "Value": {
                "Fn::GetAtt": ["LambdaFirehose", "Arn"]
            }
        }
    }
}